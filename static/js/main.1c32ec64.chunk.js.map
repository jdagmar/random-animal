{"version":3,"sources":["State.tsx","components/Button.tsx","components/ButtonGroup.tsx","components/CatIcon.tsx","components/Card.tsx","components/Header.tsx","components/MainContent.tsx","API/animal.ts","App.tsx","index.tsx"],"names":["animalRequestedAction","type","initState","currentAnimal","tag","reducer","state","action","payload","response","reason","url","FilledButton","styled","button","Button","props","onClick","animalType","InlineButtonGroup","div","ButtonGroup","children","CatIcon","width","size","height","fillRule","clipRule","viewBox","d","Image","img","ImageWrapper","Paragraph","p","rotate","keyframes","Spinner","Card","animal","src","alt","getCardContent","MainHeading","h1","Preamble","Header","Main","main","MainContent","getCat","fetch","then","json","data","succeededResponse","file","delayPromise","catch","responseFailed","getDog","timeOut","Promise","resolve","setTimeout","App","React","createContext","useReducer","dispatch","requestAnimal","useCallback","AnimalApi","res","gotAnimalResponseAction","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c32ec64.chunk.js","sourcesContent":["import { AnimalResponse } from './API/animal';\n\nexport type Action = GotAnimalResponseAction | AnimalRequstedAction;\n\nexport type GotAnimalResponseAction = {\n  type: 'gotAnimalResponse';\n  payload: AnimalResponse;\n};\n\ntype AnimalRequstedAction = {\n  type: 'animalRequested';\n};\n\nexport const gotAnimalResponseAction = (\n  res: AnimalResponse\n): GotAnimalResponseAction => ({ type: 'gotAnimalResponse', payload: res });\n\nexport const animalRequestedAction: AnimalRequstedAction = {\n  type: 'animalRequested',\n};\n\nexport type Animal =\n  | {\n      tag: 'got animal';\n      url: string;\n    }\n  | { tag: 'waiting' }\n  | { tag: 'placeholder' }\n  | { tag: 'fail'; reason: string };\n\nexport type State = {\n  currentAnimal: Animal;\n};\n\nexport const initState: State = {\n  currentAnimal: { tag: 'placeholder' },\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'gotAnimalResponse':\n      if (action.payload.response === 'fail') {\n        return {\n          ...state,\n          currentAnimal: {\n            tag: 'fail',\n            reason: action.payload.reason,\n          },\n        };\n      } else {\n        return {\n          ...state,\n          currentAnimal: {\n            tag: 'got animal',\n            url: action.payload.url,\n          },\n        };\n      }\n    case 'animalRequested':\n      return {\n        ...state,\n        currentAnimal: {\n          tag: 'waiting',\n        },\n      };\n  }\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { AnimalType } from '../API/animal';\n\ntype Props = {\n  animalType: AnimalType;\n  onClick: (animalType: AnimalType) => void;\n};\n\nconst FilledButton = styled.button`\n  background-color: #b24968;\n  color: #ffffff;\n  border: none;\n  padding: 0.5rem 1.2rem;\n  margin: 0.5rem;\n  font-family: 'Sen', sans-serif;\n  font-size: 1.2rem;\n  border-radius: 0.25rem;\n`;\n\nexport const Button = (props: Props) => {\n  return (\n    <div>\n      <FilledButton onClick={() => props.onClick(props.animalType)}>\n        {props.animalType}\n      </FilledButton>\n    </div>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst InlineButtonGroup = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin-bottom: 2rem;\n`;\n\nexport const ButtonGroup = (props: Props) => {\n  return <InlineButtonGroup>{props.children}</InlineButtonGroup>;\n};\n","import React from 'react';\n\ntype Props = {\n  size: number;\n};\n\nexport const CatIcon = (props: Props) => {\n  return (\n    <svg\n      width={props.size}\n      height={props.size}\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M14.872 17.711c-.29.54-1.002.918-1.729.918-.447 0-.849-.147-1.15-.416a1.704 1.704 0 01-1.149.416c-.729 0-1.44-.378-1.73-.918-.309-.576.536-1.14.94-.424.102.181.432.375.761.375.692 0 .631-.738.631-1.3-.423-.211-.717-.63-.717-1.006 0-.527.57-.762 1.271-.762s1.271.235 1.271.762c0 .38-.299.805-.73 1.014 0 .587-.056 1.254.599 1.254.341 0 .729-.208.863-.393.45-.624 1.185-.106.869.48zM15 11.5a.835.835 0 000 1.667.834.834 0 000-1.667zm0 2.667a1.835 1.835 0 010-3.667 1.835 1.835 0 010 3.667zM9 11.5a.835.835 0 10.833.834A.835.835 0 009 11.5zm0 2.667a1.836 1.836 0 01-1.834-1.833c0-1.012.823-1.834 1.834-1.834a1.835 1.835 0 010 3.667zm12.113 3.986c-.78-7.61-2.462-11.289-4.568-13.869-1.21 1.055-2.044 1.769-3.321 3.667-.74-.121-1.769-.119-2.486.006C9.2 6.119 8.164 5.281 6.925 4.303 4.888 6.787 3.422 10.44 2.808 18.026A10.924 10.924 0 011 12C1 5.935 5.934 1 12 1c6.065 0 11 4.935 11 11 0 2.277-.696 4.396-1.887 6.153zM12 23c-3.298 0-6.254-1.466-8.272-3.772.304-4.521 1.094-10.361 3.357-13.517 1.728 1.421 2.717 2.682 3.276 3.359.748-.19 1.823-.358 3.316.007.96-1.452 1.508-2.222 2.74-3.347 1.989 2.717 3.26 7.267 3.8 13.558C18.2 21.559 15.268 23 12 23zm0-23C5.377 0 0 5.377 0 12c0 6.627 5.4 12 12 12 6.559 0 12-5.33 12-12 0-6.623-5.377-12-12-12z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Animal } from '../State';\nimport { CatIcon } from './CatIcon';\n\ntype Props = {\n  animal: Animal;\n};\n\nconst Image = styled.img`\n  max-width: 100%;\n  width: 350px;\n  height: 350px;\n  object-fit: cover;\n`;\n\nconst ImageWrapper = styled.div`\n  max-width: 475px;\n  max-height: 475px;\n  margin: 0.5rem auto;\n`;\n\nconst Paragraph = styled.p`\n  font-family: 'Roboto', sans-serif;\n  font-size: 1.2rem;\n`;\n\nconst rotate = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Spinner = styled.div`\n  display: inline-block;\n  width: 80px;\n  height: 80px;\n\n  &:after {\n    content: ' ';\n    display: block;\n    width: 64px;\n    height: 64px;\n    margin: 8px;\n    border-radius: 50%;\n    border: 6px solid #fff;\n    border-color: #6c5fa7 transparent #fff transparent;\n    animation: ${rotate} 1.2s linear infinite;\n  }\n`;\n// handle mp4 files\nexport const Card = (props: Props) => {\n  const getCardContent = () => {\n    switch (props.animal.tag) {\n      case 'got animal':\n        return (\n          <ImageWrapper>\n            <Image src={props.animal.url} alt=\"\" />\n          </ImageWrapper>\n        );\n      case 'fail':\n        return (\n          <Paragraph>Failed to fetch image {props.animal.reason}</Paragraph>\n        );\n      case 'placeholder':\n        return <CatIcon size={90} />;\n      case 'waiting':\n        return <Spinner></Spinner>;\n    }\n  };\n\n  return <div>{getCardContent()}</div>;\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst MainHeading = styled.h1`\n  padding: 0.5rem 1rem;\n  font-family: 'Sen', sans-serif;\n  font-size: 1.2rem;\n`;\n\nconst Preamble = styled.p`\n  padding: 0.5rem 1rem;\n  margin: 0.5rem;\n  font-family: 'Roboto', sans-serif;\n  font-size: 1.2rem;\n`;\n\nexport const Header = () => {\n  return (\n    <header>\n      <MainHeading>Random animal</MainHeading>\n      <Preamble>\n        Need some cheering up? How about a random picture of a dog or a cat?\n      </Preamble>\n    </header>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const MainContent = (props: Props) => {\n  return <Main>{props.children}</Main>;\n};\n","export type AnimalResponse =\n  | {\n      response: 'success';\n      url: string;\n    }\n  | { response: 'fail'; reason: string };\n\nexport type AnimalType = 'Cat' | 'Dog';\n\nexport const get = (animalType: AnimalType): Promise<AnimalResponse> => {\n  switch (animalType) {\n    case 'Cat':\n      return getCat();\n    case 'Dog':\n      return getDog();\n  }\n};\n\nconst getCat = (): Promise<AnimalResponse> =>\n  fetch('https://aws.random.cat/meow')\n    .then(response => response.json())\n    .then((data): AnimalResponse => succeededResponse(data.file))\n    .then(response => delayPromise(response, 1000))\n    .catch(() => responseFailed('Could not get cat'));\n\nconst getDog = (): Promise<AnimalResponse> =>\n  fetch('https://random.dog/woof.json')\n    .then(response => response.json())\n    .then((data): AnimalResponse => succeededResponse(data.url))\n    .then(response => delayPromise(response, 1000))\n    .catch(() => responseFailed('Could not get dog'));\n\nconst responseFailed = (reason: string): AnimalResponse => ({\n  response: 'fail',\n  reason,\n});\n\nconst succeededResponse = (url: string): AnimalResponse => ({\n  response: 'success',\n  url,\n});\n\nconst delayPromise = <T>(response: T, timeOut: number) =>\n  new Promise<T>(resolve => {\n    setTimeout(() => {\n      resolve(response);\n    }, timeOut);\n  });\n","import React, { useReducer, useCallback } from 'react';\nimport {\n  Action,\n  State,\n  initState,\n  reducer,\n  animalRequestedAction,\n  gotAnimalResponseAction,\n} from './State';\nimport { Card, Button, ButtonGroup, Header, MainContent } from './components';\nimport * as AnimalApi from './API/animal';\n\nexport const AppContext = React.createContext([\n  initState,\n  (() => {}) as React.Dispatch<Action>,\n] as [State, React.Dispatch<Action>]);\n\nexport const App = () => {\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  const requestAnimal = useCallback((animalType: AnimalApi.AnimalType) => {\n    dispatch(animalRequestedAction);\n    AnimalApi.get(animalType).then(res =>\n      dispatch(gotAnimalResponseAction(res))\n    );\n  }, []);\n\n  return (\n    <MainContent>\n      <Header />\n      <ButtonGroup>\n        <Button animalType=\"Cat\" onClick={requestAnimal} />\n        <Button animalType=\"Dog\" onClick={requestAnimal} />\n      </ButtonGroup>\n      <Card animal={state.currentAnimal} />\n    </MainContent>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}